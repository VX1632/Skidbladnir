Disaster Recovery Plan
# Remember, there is no simple and fast disaster recovery. Practice, practice, practice: Enforce destruction of clusters. Upgrade to the next latest version of Kubernetes to follow this mantra.
# Don't upgrade clusters, create new ones to move to the newest version of Kubernetes

11.6.2025
Package proposal

Data backups will be separate from infrastructure backups

Valero - resouces with mutation that have critical yet missing components from the desired state.
ArgoCD/flux - for all other resource

Longhorn?

 Core Principles

    ‚úÖ Prefer rebuild over upgrade: learn config properly and prevent silent rot.

    ‚úÖ Separate setup (infra/config/GitOps) and data (PVC, DBs).

    ‚úÖ Use your fast node for recent, frequent backups.

    ‚úÖ Use master's RAID for long-term storage and archival.

1. Setup Backups (GitOps + cluster state)
Tool
üîπ FluxCD or ArgoCD	Declarative GitOps control	GitHub or local Git
üîπ Velero (with CSI)	Cluster metadata (CRDs, deployments, PVCs)	Vioarr short-term + Odin archive
üîπ microk8s backup	dqlite/etcd control-plane backup	Odin weekly full
kube-backup or kube-state-backup

Data that matters:
YAML / manifests	‚ùå No	
  Format, not arch
microk8s backup	‚úÖ Yes (dqlite)	
  Restore only to same arch or cluster version
VolumeSnapshots (CSI)	‚úÖ Usually	
  Use node-local CSI drivers (no cross-node ZFS snapshotting)
Velero + Restic	‚úÖ Slightly	
  Restic uses rsync-like method. Watch for binary format drift (e.g. SQLite or leveldb)

Examples:
  Postgres? ‚úÖ portable via dump
  MongoDB with mmapv1? ‚ö†Ô∏è watch out
  Flat file apps? ‚úÖ easy

Master (x86)
  microk8s backup --name full-weekly
  velero backup create cluster-weekly

Backup worker (ARM64)  Velero + Restic/Kopia
  Daily CSI VolumeSnapshots of workloads on ARM nodes
  Local Velero backups (short retention: 3‚Äì7 days)
  Cronjob to rsync/export snapshots to Odin
  Optional: Longhorn or OpenEBS to manage persistent volumes

Velero + Restic/Kopia
  Velero manages retention with built-in expiration rules
  Kopia supports automatic Garbage Collection GC

Just for reference
üß† 1. Core Cluster Management & GitOps
Tool	                Purpose	                                      Architecture	                      Install on
MicroK8s	            Lightweight Kubernetes distribution	          ARM64 + x86_64	                    All nodes
FluxCD or ArgoCD	    Declarative app management	                  ARM64 + x86_64	                    Master (x86) (preferred)
Sealed Secrets	      Encrypt secrets for GitOps	                  ARM64 + x86_64	                    Master (x86) or shared
KubeStateMetrics	    Export Kubernetes state metrics	              ARM64 + x86_64	                    Master (x86)

üß± 2. Storage & Backup
Tool	                Purpose	                                      Architecture	                      Install on
OpenEBS	              CSI volume provisioning (ZFS + ext4)	        ARM64 + x86_64	                    ZFS engine on Master, hostpath engine on Pi 5s
Velero	              Kubernetes-native backup + restore	          ARM64 + x86_64	                    Backup Pi node (preferred), Master (x86) for archive location
Restic or Kopia	      File-level PVC backups	                      ARM64 + x86_64	                    Used by Velero on Backup Pi node
ZFS	                  Native volume + snapshot system	              x86_64 only	                        Master (x86) only
CSI snapshot CRDs	    Enables snapshot management	                  Architecture-independent	          All nodes
MinIO (optional)	    S3-compatible object storage	                ARM64 + x86_64	                    Master (x86) or Backup Pi node if you want remote backup format

üì° 3. Observability & Monitoring
Tool	                              Purpose	                        Architecture	                      Install on
Prometheus	                        Metrics & cluster health	        ‚úÖ	                              Master (x86)
Grafana	                            Dashboards	                      ‚úÖ	                              Master (x86)
Node Exporter	                      Node-level metrics	              ‚úÖ	                              All nodes
Alertmanager	                      Send alerts	                      ‚úÖ	                              Master (x86)
KubeLens / Lens IDE (optional)	    GUI for cluster	                  ‚úÖ	                              Local dev machine

üîÅ 4. Job Scheduling & Automation
Tool	                              Purpose	                        Architecture	                     	Install on
CronJobs	                          Schedule GC, snapshots, syncs	    ‚úÖ	                              Backup Pi node & Master (x86)
Rsync	                              Copy snapshots to Odin	          ‚úÖ	                              Backup Pi node & Master (x86)
Kustomize	                          Declarative overlay management	  ‚úÖ	                              Dev workstation
Helm	                              App install & config templating	  ‚úÖ	                              Master (x86) (for mgmt)

üåê 5. Access & Control
Tool	                              Purpose                        	Architecture		                    Install on
Traefik or NGINX Ingress	          Routing apps	                    ‚úÖ	                              Master (x86)
Cert-Manager	                      TLS management	                  ‚úÖ	                              Master (x86)
OAuth2 Proxy	                      Protect services with auth	      ‚úÖ	                              Master (x86)
















